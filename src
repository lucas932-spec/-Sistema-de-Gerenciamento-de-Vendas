-- Criação do Banco de Dados
CREATE DATABASE sistema_vendas;
USE sistema_vendas;

-- Criação das Tabelas
CREATE TABLE Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100),
    telefone VARCHAR(20)
);

CREATE TABLE Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome_produto VARCHAR(100) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    quantidade_estoque INT NOT NULL
);

CREATE TABLE Vendas (
    id_venda INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT,
    id_produto INT,
    quantidade_vendida INT NOT NULL,
    data_venda DATE,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente) ON DELETE CASCADE,
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto) ON DELETE CASCADE
);

-- Inserção de Dados
INSERT INTO Clientes (nome, email, telefone) VALUES 
('Ana Oliveira', 'ana.oliveira@email.com', '1111-2222'),
('Bruno Lima', 'bruno.lima@email.com', '3333-4444'),
('Carla Souza', 'carla.souza@email.com', '5555-6666');

INSERT INTO Produtos (nome_produto, preco, quantidade_estoque) VALUES 
('Notebook', 3000.00, 10),
('Smartphone', 1500.00, 20),
('Impressora', 800.00, 5);

INSERT INTO Vendas (id_cliente, id_produto, quantidade_vendida, data_venda) VALUES 
(1, 1, 1, '2023-09-01'),
(2, 2, 2, '2023-09-02'),
(3, 3, 1, '2023-09-03'),
(1, 2, 1, '2023-09-04'),
(2, 1, 1, '2023-09-05');

-- Consultas e Relatórios

-- 1. Mostre todas as vendas realizadas, incluindo o nome do cliente e o nome do produto
SELECT v.id_venda, c.nome AS Nome_Cliente, p.nome_produto AS Nome_Produto, v.quantidade_vendida, v.data_venda
FROM Vendas v
JOIN Clientes c ON v.id_cliente = c.id_cliente
JOIN Produtos p ON v.id_produto = p.id_produto;

-- 2. Mostre todas as compras realizadas por um cliente específico (ex: Cliente com id_cliente = 1)
SELECT v.id_venda, c.nome AS Nome_Cliente, p.nome_produto AS Nome_Produto, v.quantidade_vendida, v.data_venda
FROM Vendas v
JOIN Clientes c ON v.id_cliente = c.id_cliente
JOIN Produtos p ON v.id_produto = p.id_produto
WHERE v.id_cliente = 1;

-- 3. Exiba o total de vendas realizadas por produto
SELECT p.nome_produto AS Nome_Produto, SUM(v.quantidade_vendida) AS Total_Vendido
FROM Vendas v
JOIN Produtos p ON v.id_produto = p.id_produto
GROUP BY p.id_produto;

-- Atualização e Deleção de Dados

-- 1. Atualize o estoque de um produto após uma venda (ex: Produto com id_produto = 1)
UPDATE Produtos
SET quantidade_estoque = quantidade_estoque - (SELECT quantidade_vendida FROM Vendas WHERE id_produto = 1 AND id_venda = 1)
WHERE id_produto = 1;

-- 2. Atualize as informações de um cliente (ex: Cliente com id_cliente = 1)
UPDATE Clientes
SET email = 'ana.oliveira_novo@email.com', telefone = '7777-8888'
WHERE id_cliente = 1;

-- 3. Deletar uma venda e, se necessário, deletar o cliente associado (ex: Venda com id_venda = 1)
DELETE FROM Vendas WHERE id_venda = 1;

-- Testar se o cliente ainda está presente após a venda ser deletada
SELECT * FROM Clientes WHERE id_cliente = 1;
